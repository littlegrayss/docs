(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{216:function(a,t,s){"use strict";s.r(t);var e=s(0),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"workflow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#workflow"}},[a._v("#")]),a._v(" workflow")]),a._v(" "),s("p",[a._v("scene:")]),a._v(" "),s("blockquote",[s("ol",[s("li",[a._v("一般每个人同一时间只负责一个需求，总有例外\n突然接到bug修复，或者更紧急的需求，但是正在开发一个需求时")]),a._v(" "),s("li",[a._v("已经迭代过好几个版本了，但是前几个版本的代码有问题，一时之间找不出原因要马上回滚")]),a._v(" "),s("li",[a._v("...")])])]),a._v(" "),s("h3",{attrs:{id:"work-flow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#work-flow"}},[a._v("#")]),a._v(" work-flow")]),a._v(" "),s("ul",[s("li",[a._v("git-flow")]),a._v(" "),s("li",[a._v("github flow")]),a._v(" "),s("li",[a._v("gitlab-flow")])]),a._v(" "),s("h4",{attrs:{id:"branch-management"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#branch-management"}},[a._v("#")]),a._v(" branch management")]),a._v(" "),s("h3",{attrs:{id:"commit-messages-rules"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commit-messages-rules"}},[a._v("#")]),a._v(" commit messages rules")]),a._v(" "),s("p",[a._v("查看gitlab上的commit记录很费劲，要看哪些是新功能，哪些是修复")]),a._v(" "),s("p",[a._v("目前团队是根据一个需求所有改动进行commit的，[缺点]")]),a._v(" "),s("p",[a._v("建议每个功能点都commit一次，[优点]")]),a._v(" "),s("p",[a._v("Conventional Commits 约定式提交规范")]),a._v(" "),s("blockquote",[s("p",[a._v("它提供了一组用于创建清晰的提交历史的简单规则")])]),a._v(" "),s("p",[a._v("messages格式：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<类型>[可选的作用域]: <描述>\n<type>[<scope>]: <subject>\n<BLANK LINE>\n<body>\n<BLANK LINE>\n<footer>\n")])])]),s("h4",{attrs:{id:"type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[a._v("#")]),a._v(" type")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 主要type\nfeat:     增加新功能\nfix:      修复bug\n\n# 特殊type\ndocs:     只改动了文档相关的内容\nstyle:    不影响代码含义的改动，例如去掉空格、改变缩进、增删分号\nbuild:    构造工具的或者外部依赖的改动，例如webpack，npm\nrefactor: 代码重构时使用\nrevert:   执行git revert打印的message\n\n# 次要type\ntest:     添加测试或者修改现有测试\nperf:     提高性能的改动\nci:       与CI（持续集成服务）有关的改动\nchore:    不修改src或者test的其余修改，例如构建过程或辅助工具的变动\n")])])]),s("h4",{attrs:{id:"scope"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scope"}},[a._v("#")]),a._v(" scope")]),a._v(" "),s("p",[a._v("用于描述改动范围，一般填写项目名/模块名")]),a._v(" "),s("h4",{attrs:{id:"subject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#subject"}},[a._v("#")]),a._v(" subject")]),a._v(" "),s("p",[a._v("简单描述")]),a._v(" "),s("h4",{attrs:{id:"body"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#body"}},[a._v("#")]),a._v(" body")]),a._v(" "),s("p",[a._v("详细描述，一般项目这部分开始就不需要填写，subject里面说明就可以了，但是重要提交或者开源项目还是建议详细说明这次改动前的情况和改动动机")]),a._v(" "),s("h4",{attrs:{id:"break-changes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#break-changes"}},[a._v("#")]),a._v(" break changes")]),a._v(" "),s("p",[a._v("指出是否有破坏性修改，不兼容以前接口的改动，例如接口删除、参数减少。")]),a._v(" "),s("h4",{attrs:{id:"affect-issues"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#affect-issues"}},[a._v("#")]),a._v(" affect issues")]),a._v(" "),s("p",[a._v("指出影响到的某个问题点，比如引用需求id，issues fixed等")]),a._v(" "),s("h4",{attrs:{id:"具体使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#具体使用"}},[a._v("#")]),a._v(" 具体使用")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" i commitizen cz-conventional-changelog --save-dev\n")])])]),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// package.json")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"config"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"commitizen"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"path"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cz-conventional-changelog"')]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"scripts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"commit"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"git-cz"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("或")]),a._v(" "),s("p",[a._v("vscode插件："),s("code",[a._v("Visual Studio Code Commitizen Support")])]),a._v(" "),s("h3",{attrs:{id:"version-number"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#version-number"}},[a._v("#")]),a._v(" Version Number")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("主版本号.子版本号.修订版本号\n")])])]),s("p",[a._v("主版本号：当功能模块有较大的变动，非向下兼容或者颠覆性更新，比如增加多个模块或者整体架构发生变化，主版本号+1。")]),a._v(" "),s("p",[a._v("子版本号：当功能有一定的增加或变化，向下兼容的修改或添加兼容性更新，比如增加了对权限控制、增加自定义视图等功能，子版本号+1。")]),a._v(" "),s("p",[a._v("修订版本号：一般是 Bug 修复或是一些小的变动，要经常发布修订版，时间间隔不限，修复一个严重的bug即可发布一个修订版，修订版本号+1。")]),a._v(" "),s("p",[a._v("希腊字母版本号(beta):此版本号用于标注当前版本的软件处于哪个开发阶段，当软件进入到另一个阶段时需要修改此版本号，比如alpha、beta。")]),a._v(" "),s("p",[a._v("版本号不会进位，但主版本或子版本+1之后，后面的版本号都清0，进行下一个周期的迭代。")]),a._v(" "),s("h4",{attrs:{id:"git-tag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-tag"}},[a._v("#")]),a._v(" git tag")]),a._v(" "),s("p",[a._v("用于记录发布版本的节点。")]),a._v(" "),s("p",[a._v("本身是对某次提交打上一个标签，实际上是指向特定提交对象的引用。可以帮助我们快速定位到某个版本，如果该版本出现问题可以快速修复。")]),a._v(" "),s("p",[a._v("用法：\n"),s("code",[a._v("git tag v1.0.1")]),a._v(" "),s("code",[a._v("git tag v1.1.0 d7f80sd7")]),a._v(" "),s("code",[a._v("git checkout -b bugfix-1.3.4 v1.3.4")])]),a._v(" "),s("h3",{attrs:{id:"changelog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#changelog"}},[a._v("#")]),a._v(" changelog")]),a._v(" "),s("p",[a._v("commit messages & version number")]),a._v(" "),s("p",[a._v("能够生成清晰的提交改动日志，方便查看每次版本的更新内容")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" i conventional-changelog-cli --save-dev\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("scripts："),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"changelog"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"conventional-changelog -p angular -i CHANGELOG.md -s -r 0"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("npm run changelog => CHANGELOG.md")])])}),[],!1,null,null,null);t.default=r.exports}}]);